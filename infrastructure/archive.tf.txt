
module "bastion-sg" {

  source  = "terraform-aws-modules/security-group/aws"
  version = "4.9.0"
  # insert the 3 required variables here
  name = "${var.app}-bastion-sg"

  vpc_id = module.vpc.vpc_id

  egress_rules  = ["all-all"]
  ingress_rules = ["ssh-tcp"]

  tags = local.common_tags

  ingress_cidr_blocks = ["0.0.0.0/0"]

}

module "ec2-bastion" {
  source  = "terraform-aws-modules/ec2-instance/aws"
  version = "4.0.0"
  # insert the 34 required variables here

  name                   = "${local.name}-ec2"
  ami                    = var.ami
  instance_type          = "t2.micro"
  vpc_security_group_ids = [module.bastion-sg.security_group_id]

  #create_spot_instance = true

  subnet_id = module.vpc.public_subnets[0]

  key_name = "terraform"

  tags = local.common_tags

}

resource "aws_eip" "bastion_eip" {
  vpc        = true
  instance   = module.ec2-bastion.id
  depends_on = [module.vpc]
}


resource "null_resource" "copy_private_key" {

  depends_on = [aws_eip.bastion_eip]

  connection {
    type        = "ssh"
    user        = "ec2-user"
    host        = aws_eip.bastion_eip.public_ip
    password    = ""
    private_key = file("data/terraform.pem")
    agent       = false
  }

  provisioner "remote-exec" {
    inline = [
      "sudo rm -rf /tmp/terraform.pem"
    ]
  }

  provisioner "file" {
    source      = "data/terraform.pem"
    destination = "/tmp/terraform.pem"
  }

  provisioner "remote-exec" {
    inline = [
      "sudo chmod 400 /tmp/terraform.pem",
      "echo \"Hiii Terraform\" >> /tmp/hi_terraform.txt",
      "cat /tmp/hi_terraform.txt"
    ]
  }


  # provisioner "local-exec" {
  #   command = "echo VPC created on `date` - VPC ID: ${module.vpc.vpc_id}"
  #   working_dir = "data"
  # }


}