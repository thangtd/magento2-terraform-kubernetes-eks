apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: phpfpm
  name: phpfpm
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: phpfpm
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: phpfpm
    spec:
      # security context does not need yet
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
        - name: init
          image: alpine:3
          command: ["/bin/sh", "-c"]
          args:
            - chown 1000:1000 /sock;
              chown 1000:1000 /tmp/appdata;
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /sock
              name: sockdata
            - mountPath: /tmp/appdata
              name: appdata
      containers:
        - env:
            - name: BLACKFIRE_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: BLACKFIRE_CLIENT_ID
                  name: env-phpfpm-env
            - name: BLACKFIRE_CLIENT_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: BLACKFIRE_CLIENT_TOKEN
                  name: env-phpfpm-env
            - name: COMPOSER_DISABLE_XDEBUG_WARN
              valueFrom:
                configMapKeyRef:
                  key: COMPOSER_DISABLE_XDEBUG_WARN
                  name: env-phpfpm-env
            - name: PHP_CS_FIXER_IGNORE_ENV
              valueFrom:
                configMapKeyRef:
                  key: PHP_CS_FIXER_IGNORE_ENV
                  name: env-phpfpm-env
          # TODO: need to patch this image to use the correct tag
          image: henrytrantdt/magento-phpfpm:main
          imagePullPolicy: Always
          name: phpfpm
          resources: {}
          volumeMounts:
            - mountPath: /sock
              name: sockdata
            - mountPath: /tmp/appdata
              name: appdata
            - mountPath: /var/www/html/auth.json
              subPath: auth.json
              name: composerauth
            - mountPath: /var/www/html/app/etc/env.php
              subPath: env.php
              name: appenv
            - mountPath: /var/www/html/app/etc/config.php
              subPath: config.php
              name: appconfig
      restartPolicy: Always
      volumes:
        - name: sockdata
          persistentVolumeClaim:
            claimName: sockdata
        - name: appdata
          persistentVolumeClaim:
            claimName: appdata
        - name: composerauth
          configMap:
            name: composerauth
            items:
              - key: auth
                path: auth.json
        - name: appconfig
          configMap:
            name: appconfig
            items:
              - key: config
                path: config.php
        - name: appenv
          configMap:
            name: appenv
            items:
              - key: env
                path: env.php
